buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'

dependencies {
    //LOCAL_STATIC_ANDROID_LIBRARIES := \
    //    com.android.emailcommon \
    //    libchips \
    //    libphotoviewer_appcompat \
    //    android-opt-bitmap \
    //    android-opt-datetimepicker \
    //    android-support-compat \
    //    android-support-media-compat \
    //    android-support-core-utils \
    //    android-support-core-ui \
    //    android-support-fragment \
    //    android-support-v7-appcompat \
    //    android-support-v7-gridlayout \
    //    android-support-v13
    implementation project(':emailcommon')
    implementation project(':external:UnifiedEmail') // crafted to exclude src included in emailcommon
    implementation project(':external:chips')
    implementation project(':external:photoviewer')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'

    //LOCAL_STATIC_JAVA_LIBRARIES := \
    //    android-support-annotations \
    //    android-common \
    //    guava \
    //    owasp-html-sanitizer
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation project(':external:ex:common')
    implementation 'com.google.guava:guava:27.0.1-java'
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20181114.1'
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22 // any higher and we crash due to not having contacts permission
    }

    // LOCAL_JAVA_LIBRARIES := org.apache.http.legacy
    useLibrary 'org.apache.http.legacy'

    sourceSets {

        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', 'provider_src']// src from UnifiedEmail included via dependency
            res.srcDirs = ['res'] // res from UnifiedEmail included via dependency to enable local override of collisions
            assets.srcDirs = ['assets', 'external/UnifiedEmail/assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    aaptOptions {
        //LOCAL_AAPT_FLAGS := --auto-add-overlay
        //LOCAL_AAPT_FLAGS += --extra-packages com.android.mail:com.android.email:com.android.emailcommon
        additionalParameters = ['--auto-add-overlay',
                                '--extra-packages', 'com.android.mail:com.android.email:com.android.emailcommon']
    }

    android {
        lintOptions {
            checkReleaseBuilds false
        }
    }
}
